ResolutionErrors.dfy(322,33): Warning: constructors no longer need 'this' to be listed in modifies clauses
ResolutionErrors.dfy(1892,15): Warning: constructors no longer need 'this' to be listed in modifies clauses
ResolutionErrors.dfy(51,15): Error: 'this' is not allowed in a 'static' context
ResolutionErrors.dfy(88,16): Error: the name 'Benny' denotes a datatype constructor, but does not do so uniquely; add an explicit qualification (for example, 'Abc.Benny')
ResolutionErrors.dfy(93,16): Error: the name 'David' denotes a datatype constructor, but does not do so uniquely; add an explicit qualification (for example, 'Abc.David')
ResolutionErrors.dfy(94,16): Error: the name 'David' denotes a datatype constructor, but does not do so uniquely; add an explicit qualification (for example, 'Abc.David')
ResolutionErrors.dfy(96,16): Error: the name 'David' denotes a datatype constructor, but does not do so uniquely; add an explicit qualification (for example, 'Abc.David')
ResolutionErrors.dfy(98,20): Error: wrong number of arguments (datatype constructor 'David' expects 1, got 2)
ResolutionErrors.dfy(13,18): Error: a possibly infinite loop is allowed only if the enclosing method is declared (with 'decreases *') to be possibly non-terminating
ResolutionErrors.dfy(25,13): Error: array selection requires an array2 (got array3<T>)
ResolutionErrors.dfy(27,13): Error: array selection requires an array4 (got array<T>)
ResolutionErrors.dfy(26,14): Error: element selection requires a sequence, array, multiset, or map (got array3<T>)
ResolutionErrors.dfy(57,16): Error: accessing member 'X' requires an instance expression
ResolutionErrors.dfy(58,9): Error: unresolved identifier: F
ResolutionErrors.dfy(59,16): Error: accessing member 'F' requires an instance expression
ResolutionErrors.dfy(60,9): Error: unresolved identifier: G
ResolutionErrors.dfy(62,9): Error: unresolved identifier: M
ResolutionErrors.dfy(63,16): Error: accessing member 'M' requires an instance expression
ResolutionErrors.dfy(64,9): Error: unresolved identifier: N
ResolutionErrors.dfy(67,10): Error: non-function expression (of type int) is called with parameters
ResolutionErrors.dfy(68,16): Error: member 'z' does not exist in non-null type 'Global'
ResolutionErrors.dfy(116,11): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(117,11): Error: a call to a ghost function is allowed only in specification contexts (consider declaring the function with 'function method')
ResolutionErrors.dfy(121,13): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(122,12): Error: actual out-parameter is required to be a ghost variable
ResolutionErrors.dfy(129,17): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(133,25): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(140,6): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(144,23): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(145,37): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(154,12): Error: only ghost methods can be called from this context
ResolutionErrors.dfy(244,29): Error: ghost-context break statement is not allowed to break out of non-ghost structure
ResolutionErrors.dfy(267,14): Error: ghost-context break statement is not allowed to break out of non-ghost loop
ResolutionErrors.dfy(281,14): Error: ghost-context break statement is not allowed to break out of non-ghost loop
ResolutionErrors.dfy(286,10): Error: return statement is not allowed in this context (because it is guarded by a specification-only expression)
ResolutionErrors.dfy(306,12): Error: label shadows an enclosing label
ResolutionErrors.dfy(311,10): Error: duplicate label
ResolutionErrors.dfy(313,10): Error: label shadows a dominating label
ResolutionErrors.dfy(337,6): Error: when allocating an object of type 'ClassWithConstructor', one of its constructor methods must be called
ResolutionErrors.dfy(338,6): Error: when allocating an object of type 'ClassWithConstructor', one of its constructor methods must be called
ResolutionErrors.dfy(340,11): Error: a constructor is allowed to be called only when an object is being allocated
ResolutionErrors.dfy(356,27): Error: arguments must have comparable types (got bool and int)
ResolutionErrors.dfy(354,18): Error: arguments must have comparable types (got int and DTD_List)
ResolutionErrors.dfy(355,18): Error: arguments must have comparable types (got DTD_List and int)
ResolutionErrors.dfy(369,17): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(393,7): Error: incorrect argument type at index 1 for method in-parameter 'b' (expected GenericClass<int>, found GenericClass<bool>) (non-variant type parameter would require int = bool)
ResolutionErrors.dfy(407,13): Error: incorrect argument type at index 0 for datatype constructor parameter 'hd' (expected _T0, found int)
ResolutionErrors.dfy(408,9): Error: incorrect argument type at index 0 for datatype constructor parameter 'hd' (expected _T0, found int)
ResolutionErrors.dfy(417,8): Error: all lines in a calculation must have the same type (got int after bool)
ResolutionErrors.dfy(421,8): Error: all lines in a calculation must have the same type (got int after bool)
ResolutionErrors.dfy(424,8): Error: first argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(424,8): Error: second argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(425,12): Error: first argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(425,12): Error: second argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(426,12): Error: first argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(426,12): Error: second argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(424,8): Error: first argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(424,8): Error: second argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(430,12): Error: first argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(430,12): Error: second argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(429,8): Error: first argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(429,8): Error: second argument to ==> must be of type bool (instead got int)
ResolutionErrors.dfy(416,8): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
ResolutionErrors.dfy(416,8): Error: arguments must have comparable types (got bool and int)
ResolutionErrors.dfy(416,8): Error: arguments must have comparable types (got bool and int)
ResolutionErrors.dfy(420,8): Error: arguments must have comparable types (got bool and int)
ResolutionErrors.dfy(420,8): Error: arguments must have comparable types (got bool and int)
ResolutionErrors.dfy(454,13): Error: in a hint, calls are allowed only to lemmas
ResolutionErrors.dfy(456,10): Error: a hint is not allowed to make heap updates
ResolutionErrors.dfy(458,10): Error: a hint is not allowed to update a variable it doesn't declare
ResolutionErrors.dfy(479,4): Error: More than one anonymous constructor
ResolutionErrors.dfy(485,8): Error: when allocating an object of type 'Y', one of its constructor methods must be called
ResolutionErrors.dfy(490,8): Error: when allocating an object of type 'Luci', one of its constructor methods must be called
ResolutionErrors.dfy(491,8): Error: when allocating an object of type 'Luci', one of its constructor methods must be called
ResolutionErrors.dfy(493,11): Error: class Lamb does not have an anonymous constructor
ResolutionErrors.dfy(546,7): Error: RHS (of type List<A>) not assignable to LHS (of type List<B>) (covariant type parameter would require A <: B)
ResolutionErrors.dfy(551,7): Error: RHS (of type List<A>) not assignable to LHS (of type List<B>) (covariant type parameter would require A <: B)
ResolutionErrors.dfy(565,17): Error: type of case bodies do not agree (found Tree<_T1, _T0>, previous types Tree<_T0, _T1>) (covariant type parameter 0 would require _T1 <: _T0)
ResolutionErrors.dfy(577,24): Error: Wrong number of type arguments (0 instead of 2) passed to datatype: Tree
ResolutionErrors.dfy(592,20): Error: unresolved identifier: w
ResolutionErrors.dfy(611,8): Error: the type of this local variable is underspecified
ResolutionErrors.dfy(612,25): Error: the type of this variable is underspecified
ResolutionErrors.dfy(612,23): Error: type parameter 'T' (inferred to be '?') in the function call to 'P' could not be determined
ResolutionErrors.dfy(612,18): Error: type of bound variable 'z' could not be determined; please specify the type explicitly
ResolutionErrors.dfy(625,13): Error: a lemma is not allowed to use 'new'
ResolutionErrors.dfy(626,9): Error: a lemma is not allowed to use 'new'
ResolutionErrors.dfy(635,16): Error: only ghost methods can be called from this context
ResolutionErrors.dfy(642,15): Error: only ghost methods can be called from this context
ResolutionErrors.dfy(652,17): Error: a hint is not allowed to use 'new'
ResolutionErrors.dfy(667,14): Error: new allocation not supported in aggregate assignments
ResolutionErrors.dfy(674,14): Error: a forall statement is not allowed to use 'new'
ResolutionErrors.dfy(674,11): Error: assignment to array element is not allowed in this context, because the statement is in a ghost context; e.g., it may be guarded by a specification-only expression
ResolutionErrors.dfy(690,26): Error: second argument to "in" must be a set, multiset, or sequence with elements of type int, or a map with domain int (instead got bool)
ResolutionErrors.dfy(685,18): Error: second argument to "in" must be a set, multiset, or sequence with elements of type int, or a map with domain int (instead got ?)
ResolutionErrors.dfy(702,13): Error: lemmas are not allowed to have modifies clauses
ResolutionErrors.dfy(729,22): Error: a possibly infinite loop is allowed only if the enclosing method is declared (with 'decreases *') to be possibly non-terminating
ResolutionErrors.dfy(762,22): Error: a possibly infinite loop is allowed only if the enclosing method is declared (with 'decreases *') to be possibly non-terminating
ResolutionErrors.dfy(795,17): Error: wrong number of method result arguments (got 0, expected 1)
ResolutionErrors.dfy(816,4): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(827,40): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(850,6): Error: RHS (of type B) not assignable to LHS (of type object)
ResolutionErrors.dfy(852,6): Error: RHS (of type B) not assignable to LHS (of type object)
ResolutionErrors.dfy(857,6): Error: RHS (of type G) not assignable to LHS (of type object)
ResolutionErrors.dfy(858,6): Error: RHS (of type Dt) not assignable to LHS (of type object)
ResolutionErrors.dfy(859,6): Error: RHS (of type CoDt) not assignable to LHS (of type object)
ResolutionErrors.dfy(851,6): Error: RHS (of type int) not assignable to LHS (of type object)
ResolutionErrors.dfy(871,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got int)
ResolutionErrors.dfy(875,16): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (x)
ResolutionErrors.dfy(887,14): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (x)
ResolutionErrors.dfy(895,16): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (x)
ResolutionErrors.dfy(905,20): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (x)
ResolutionErrors.dfy(916,18): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (x)
ResolutionErrors.dfy(938,10): Error: LHS of assignment must denote a mutable field
ResolutionErrors.dfy(939,10): Error: LHS of assignment must denote a mutable field
ResolutionErrors.dfy(940,9): Error: cannot assign to a range of array elements (try the 'forall' statement)
ResolutionErrors.dfy(941,9): Error: cannot assign to a range of array elements (try the 'forall' statement)
ResolutionErrors.dfy(942,5): Error: cannot assign to a range of array elements (try the 'forall' statement)
ResolutionErrors.dfy(943,5): Error: cannot assign to a range of array elements (try the 'forall' statement)
ResolutionErrors.dfy(932,4): Error: LHS of array assignment must denote an array element (found seq<int>)
ResolutionErrors.dfy(933,4): Error: LHS of array assignment must denote an array element (found seq<int>)
ResolutionErrors.dfy(954,4): Warning: note, this forall statement has no body
ResolutionErrors.dfy(955,11): Error: unresolved identifier: s
ResolutionErrors.dfy(974,18): Error: member '3' does not exist in datatype '_tuple#3'
ResolutionErrors.dfy(974,28): Error: member 'x' does not exist in datatype '_tuple#2'
ResolutionErrors.dfy(973,18): Error: condition is expected to be of type bool, but is int
ResolutionErrors.dfy(967,39): Error: RHS (of type (int, real, int)) not assignable to LHS (of type (int, real, int, real))
ResolutionErrors.dfy(966,34): Error: RHS (of type (int, int, real)) not assignable to LHS (of type (int, real, int)) (covariant type parameter 1 would require int <: real)
ResolutionErrors.dfy(966,34): Error: RHS (of type (int, int, real)) not assignable to LHS (of type (int, real, int)) (covariant type parameter 2 would require real <: int)
ResolutionErrors.dfy(998,12): Error: type of left argument to % (int) must agree with the result type (real)
ResolutionErrors.dfy(998,12): Error: arguments to % must be integer-numeric or bitvector types (got real)
ResolutionErrors.dfy(997,19): Error: type of right argument to / (int) must agree with the result type (real)
ResolutionErrors.dfy(1025,11): Error: Wrong number of type arguments (2 instead of 1) passed to non-null type: array3
ResolutionErrors.dfy(1026,11): Error: Wrong number of type arguments (2 instead of 1) passed to non-null type: C
ResolutionErrors.dfy(1037,7): Error: duplicate name of top-level declaration: BadSyn2
ResolutionErrors.dfy(1034,17): Error: Wrong number of type arguments (0 instead of 1) passed to datatype: List
ResolutionErrors.dfy(1035,17): Error: Undeclared top-level type or type parameter: badName (did you forget to qualify a name or declare a module import 'opened'?)
ResolutionErrors.dfy(1036,22): Error: Undeclared top-level type or type parameter: X (did you forget to qualify a name or declare a module import 'opened'?)
ResolutionErrors.dfy(1043,7): Error: type-synonym cycle: A -> A
ResolutionErrors.dfy(1046,7): Error: cycle among redirecting types (newtypes, subset types, type synonyms): A -> B -> A
ResolutionErrors.dfy(1050,7): Error: cycle among redirecting types (newtypes, subset types, type synonyms): A -> B -> A
ResolutionErrors.dfy(1059,11): Error: because of cyclic dependencies among constructor argument types, no instances of datatype 'D' can be constructed
ResolutionErrors.dfy(1062,7): Error: cycle among redirecting types (newtypes, subset types, type synonyms): A -> B -> A
ResolutionErrors.dfy(1067,7): Error: cycle among redirecting types (newtypes, subset types, type synonyms): A -> B -> A
ResolutionErrors.dfy(1072,7): Error: type-synonym cycle: A -> A
ResolutionErrors.dfy(1079,25): Error: unresolved identifier: x
ResolutionErrors.dfy(1082,22): Error: unresolved identifier: x
ResolutionErrors.dfy(1085,25): Error: unresolved identifier: x
ResolutionErrors.dfy(1087,21): Error: unresolved identifier: x
ResolutionErrors.dfy(1089,21): Error: unresolved identifier: x
ResolutionErrors.dfy(1092,21): Error: unresolved identifier: x
ResolutionErrors.dfy(1099,35): Error: Wrong number of type arguments (2 instead of 1) passed to opaque type: P
ResolutionErrors.dfy(1111,13): Error: Undeclared top-level type or type parameter: BX (did you forget to qualify a name or declare a module import 'opened'?)
ResolutionErrors.dfy(1121,6): Error: RHS (of type P<int>) not assignable to LHS (of type P<bool>) (non-variant type parameter would require bool = int)
ResolutionErrors.dfy(1126,6): Error: RHS (of type P<A>) not assignable to LHS (of type P<B>) (non-variant type parameter would require B = A)
ResolutionErrors.dfy(1131,6): Error: RHS (of type P<A>) not assignable to LHS (of type P<int>) (non-variant type parameter would require int = A)
ResolutionErrors.dfy(1132,6): Error: RHS (of type P<int>) not assignable to LHS (of type P<A>) (non-variant type parameter would require A = int)
ResolutionErrors.dfy(1137,13): Error: arguments must have comparable types (got P<int> and P<X>)
ResolutionErrors.dfy(1138,13): Error: arguments must have comparable types (got P<bool> and P<X>)
ResolutionErrors.dfy(1139,13): Error: arguments must have comparable types (got P<int> and P<bool>)
ResolutionErrors.dfy(1150,10): Error: new can be applied only to class types (got JJ)
ResolutionErrors.dfy(1158,31): Error: a set comprehension involved in a function definition is not allowed to depend on the set of allocated references, but values of 'o' may contain references (see documentation for 'older' parameters)
ResolutionErrors.dfy(1160,38): Error: a set comprehension involved in a function definition is not allowed to depend on the set of allocated references, but values of 'o' may contain references (see documentation for 'older' parameters)
ResolutionErrors.dfy(1165,27): Error: set comprehensions in non-ghost contexts must be compilable, but Dafny's heuristics can't figure out how to produce or compile a bounded set of values for 'o'
ResolutionErrors.dfy(1173,15): Error: arguments to / must be numeric or bitvector types (got set<bool>)
ResolutionErrors.dfy(1180,20): Error: a call to a possibly non-terminating method is allowed only if the calling method is also declared (with 'decreases *') to be possibly non-terminating
ResolutionErrors.dfy(1195,16): Error: a possibly infinite loop is allowed only if the enclosing method is declared (with 'decreases *') to be possibly non-terminating
ResolutionErrors.dfy(1260,13): Error: type parameter 'PT' (inferred to be '?') in the function call to 'P' could not be determined
ResolutionErrors.dfy(1261,14): Error: the type of this variable is underspecified
ResolutionErrors.dfy(1261,19): Error: type parameter 'QT' (inferred to be '?') in the function call to 'Q' could not be determined
ResolutionErrors.dfy(1261,20): Error: the type of this expression is underspecified
ResolutionErrors.dfy(1262,4): Error: type parameter 'MT' (inferred to be '?') to the method 'M' could not be determined
ResolutionErrors.dfy(1263,8): Error: the type of this variable is underspecified
ResolutionErrors.dfy(1263,13): Error: type parameter 'NT' (inferred to be '?') to the method 'N' could not be determined
ResolutionErrors.dfy(1264,8): Error: the type of this variable is underspecified
ResolutionErrors.dfy(1265,8): Error: the type of this variable is underspecified
ResolutionErrors.dfy(1266,8): Error: the type of this local variable is underspecified
ResolutionErrors.dfy(1267,8): Error: the type of this variable is underspecified
ResolutionErrors.dfy(1268,8): Error: the type of this local variable is underspecified
ResolutionErrors.dfy(1272,26): Error: the type of this variable is underspecified
ResolutionErrors.dfy(1272,21): Error: type of bound variable 's' could not be determined; please specify the type explicitly
ResolutionErrors.dfy(1273,31): Error: the type of this variable is underspecified
ResolutionErrors.dfy(1273,21): Error: type of bound variable 's' could not be determined; please specify the type explicitly
ResolutionErrors.dfy(1274,30): Error: the type of this variable is underspecified
ResolutionErrors.dfy(1274,21): Error: type of bound variable 'c' could not be determined; please specify the type explicitly
ResolutionErrors.dfy(1281,8): Error: the type of this local variable is underspecified
ResolutionErrors.dfy(1284,29): Error: type of bound variable 'c' could not be determined; please specify the type explicitly
ResolutionErrors.dfy(1295,21): Error: Undeclared top-level type or type parameter: X (did you forget to qualify a name or declare a module import 'opened'?)
ResolutionErrors.dfy(1296,24): Error: Undeclared top-level type or type parameter: X (did you forget to qualify a name or declare a module import 'opened'?)
ResolutionErrors.dfy(1333,16): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (y)
ResolutionErrors.dfy(1350,18): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (x)
ResolutionErrors.dfy(1378,15): Error: The name Inner ambiguously refers to a type in one of the modules A, B (try qualifying the type name with the module name)
ResolutionErrors.dfy(1388,29): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(1390,49): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(1390,54): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(1399,33): Error: set argument type must support equality (got (int, int -> bool))
ResolutionErrors.dfy(1411,11): Error: name of type (X) is used as a variable
ResolutionErrors.dfy(1411,16): Error: name of type (X) is used as a variable
ResolutionErrors.dfy(1412,11): Error: name of module (Y) is used as a variable
ResolutionErrors.dfy(1412,16): Error: name of module (Y) is used as a variable
ResolutionErrors.dfy(1413,11): Error: name of type (X) is used as a variable
ResolutionErrors.dfy(1414,11): Error: name of module (Y) is used as a variable
ResolutionErrors.dfy(1419,16): Error: name of type (X) is used as a variable
ResolutionErrors.dfy(1420,16): Error: name of module (Y) is used as a variable
ResolutionErrors.dfy(1421,4): Error: name of type (X) is used as a variable
ResolutionErrors.dfy(1422,4): Error: name of module (Y) is used as a variable
ResolutionErrors.dfy(1432,9): Error: type of RHS of assign-such-that statement must be boolean (got int)
ResolutionErrors.dfy(1431,11): Error: type of left argument to + (int) must agree with the result type (bool)
ResolutionErrors.dfy(1431,11): Error: type of right argument to + (int) must agree with the result type (bool)
ResolutionErrors.dfy(1431,11): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
ResolutionErrors.dfy(1433,13): Error: type of RHS of assign-such-that statement must be boolean (got int)
ResolutionErrors.dfy(1436,15): Error: type of left argument to + (int) must agree with the result type (bool)
ResolutionErrors.dfy(1436,15): Error: type of right argument to + (int) must agree with the result type (bool)
ResolutionErrors.dfy(1436,15): Error: type of + must be of a numeric type, a bitvector type, ORDINAL, char, a sequence type, or a set-like or map-like type (instead got bool)
ResolutionErrors.dfy(1479,20): Error: in a hint, calls are allowed only to lemmas
ResolutionErrors.dfy(1488,24): Error: in a hint, calls are allowed only to lemmas
ResolutionErrors.dfy(1501,18): Error: assignment to non-ghost field is not allowed in this context, because this is a ghost function
ResolutionErrors.dfy(1502,10): Error: a hint is not allowed to make heap updates
ResolutionErrors.dfy(1503,20): Error: in a hint, calls are allowed only to lemmas
ResolutionErrors.dfy(1506,21): Error: a loop in a hint is not allowed to use 'modifies' clauses
ResolutionErrors.dfy(1523,24): Error: in a hint, calls are allowed only to lemmas
ResolutionErrors.dfy(1530,18): Error: assignment to non-ghost field is not allowed in this context, because the statement is in a ghost context; e.g., it may be guarded by a specification-only expression
ResolutionErrors.dfy(1531,10): Error: a hint is not allowed to make heap updates
ResolutionErrors.dfy(1532,11): Error: in a hint, calls are allowed only to lemmas
ResolutionErrors.dfy(1535,21): Error: a loop in a hint is not allowed to use 'modifies' clauses
ResolutionErrors.dfy(1452,29): Error: in a hint, calls are allowed only to lemmas
ResolutionErrors.dfy(1454,17): Error: in a hint, calls are allowed only to lemmas
ResolutionErrors.dfy(1558,29): Error: in a statement expression, calls are allowed only to lemmas
ResolutionErrors.dfy(1570,16): Error: a possibly infinite loop is allowed only if the enclosing method is declared (with 'decreases *') to be possibly non-terminating
ResolutionErrors.dfy(1588,12): Error: a 'break break break' statement is allowed only in contexts with 3 enclosing loops, but the current context only has 2
ResolutionErrors.dfy(1600,20): Error: a ghost field is allowed only in specification contexts
ResolutionErrors.dfy(1607,9): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(1613,4): Error: non-ghost variable cannot be assigned a value that depends on a ghost
ResolutionErrors.dfy(1630,8): Error: print statement is not allowed in this context (because this is a ghost method or because the statement is guarded by a specification-only expression)
ResolutionErrors.dfy(1639,29): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(1647,10): Error: the type of the bound variable 't' could not be determined
ResolutionErrors.dfy(1647,10): Error: the type of the bound variable 't' could not be determined
ResolutionErrors.dfy(1647,10): Error: the type of the bound variable 't' could not be determined
ResolutionErrors.dfy(1647,10): Error: the type of the bound variable 't' could not be determined
ResolutionErrors.dfy(1647,10): Error: the type of the bound variable 't' could not be determined
ResolutionErrors.dfy(1665,15): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (x)
ResolutionErrors.dfy(1667,10): Error: assignment to non-ghost field is not allowed in this context, because this is a ghost method
ResolutionErrors.dfy(1692,15): Error: in a ghost context, only ghost fields can be mentioned as modifies frame targets (x)
ResolutionErrors.dfy(1694,25): Error: assignment to non-ghost variable is not allowed in this context, because the statement is in a ghost context; e.g., it may be guarded by a specification-only expression
ResolutionErrors.dfy(1695,35): Error: assignment to non-ghost variable is not allowed in this context, because the statement is in a ghost context; e.g., it may be guarded by a specification-only expression
ResolutionErrors.dfy(1705,4): Error: 'decreases *' is not allowed on ghost loops
ResolutionErrors.dfy(1709,8): Error: assignment to non-ghost variable is not allowed in this context, because the statement is in a ghost context; e.g., it may be guarded by a specification-only expression
ResolutionErrors.dfy(1719,4): Error: 'decreases *' is not allowed on ghost loops
ResolutionErrors.dfy(1723,29): Error: assignment to non-ghost variable is not allowed in this context, because the statement is in a ghost context; e.g., it may be guarded by a specification-only expression
ResolutionErrors.dfy(1731,21): Error: the type of the bound variable 'u' could not be determined
ResolutionErrors.dfy(1732,23): Error: the type of the bound variable 'u' could not be determined
ResolutionErrors.dfy(1735,27): Error: the type of the bound variable 'u' could not be determined
ResolutionErrors.dfy(1739,40): Error: the type of the bound variable 'u' could not be determined
ResolutionErrors.dfy(1741,38): Error: the type of the bound variable 'u' could not be determined
ResolutionErrors.dfy(1785,19): Error: Undeclared top-level type or type parameter: realint (did you forget to qualify a name or declare a module import 'opened'?)
ResolutionErrors.dfy(1793,44): Error: range of comprehension must be of type bool (instead got C)
ResolutionErrors.dfy(1800,21): Error: Duplicate member name: P
ResolutionErrors.dfy(1802,17): Error: Duplicate member name: L
ResolutionErrors.dfy(1810,4): Error: second argument to && must be of type bool (instead got int)
ResolutionErrors.dfy(1808,11): Error: Function body type mismatch (expected int, got bool)
ResolutionErrors.dfy(1814,4): Error: second argument to && must be of type bool (instead got int)
ResolutionErrors.dfy(1818,4): Error: second argument to || must be of type bool (instead got int)
ResolutionErrors.dfy(1816,11): Error: Function body type mismatch (expected int, got bool)
ResolutionErrors.dfy(1822,4): Error: second argument to || must be of type bool (instead got int)
ResolutionErrors.dfy(1826,8): Error: second argument to || must be of type bool (instead got int)
ResolutionErrors.dfy(1824,11): Error: Function body type mismatch (expected int, got bool)
ResolutionErrors.dfy(1847,6): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1848,11): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1848,15): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1849,16): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1850,6): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1854,19): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1855,8): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1858,13): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1859,13): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1860,14): Error: in the first division of the constructor body (before 'new;'), 'this' can only be used to assign to its fields
ResolutionErrors.dfy(1891,15): Error: 'this' is not allowed in a 'static' context
ResolutionErrors.dfy(1893,16): Error: 'this' is not allowed in a 'static' context
ResolutionErrors.dfy(1909,8): Error: return statement is not allowed before 'new;' in a constructor
ResolutionErrors.dfy(1935,5): Error: type parameter (G) passed to method P must support auto-initialization (got F) (perhaps try declaring type parameter 'F' on line 1928 as 'F(0)', which says it can only be instantiated with a type that supports auto-initialization)
ResolutionErrors.dfy(1937,5): Error: type parameter (G) passed to method P must support auto-initialization (got Y) (perhaps try declaring opaque type 'Y' on line 1925 as 'Y(0)', which says it can only be instantiated with a type that supports auto-initialization)
ResolutionErrors.dfy(1974,5): Error: type parameter (G) passed to method P must support auto-initialization (got SixOrMore)
ResolutionErrors.dfy(1975,5): Error: type parameter (G) passed to method P must support auto-initialization (got AnotherSixOrMore)
ResolutionErrors.dfy(1976,5): Error: type parameter (G) passed to method P must support auto-initialization (got MySixOrMore)
ResolutionErrors.dfy(1977,5): Error: type parameter (G) passed to method P must support auto-initialization (got UnclearA)
ResolutionErrors.dfy(1993,17): Error: type parameter (G) passed to method P must support auto-initialization (got SSixOrMore)
ResolutionErrors.dfy(1994,24): Error: type parameter (G) passed to method P must support auto-initialization (got SAnotherSixOrMore)
ResolutionErrors.dfy(1995,19): Error: type parameter (G) passed to method P must support auto-initialization (got SMySixOrMore)
ResolutionErrors.dfy(1996,16): Error: type parameter (G) passed to method P must support auto-initialization (got SUnclearA)
ResolutionErrors.dfy(2026,7): Error: type 'B2', which does not support auto-initialization, is used to refine an opaque type that expects auto-initialization
ResolutionErrors.dfy(2027,7): Error: type 'B3', which does not support auto-initialization, is used to refine an opaque type that expects auto-initialization
ResolutionErrors.dfy(2031,7): Error: type 'C3', which may be empty, is used to refine an opaque type expected to be nonempty
ResolutionErrors.dfy(2051,7): Error: type declaration 'A1' is not allowed to change the requirement of supporting auto-initialization
ResolutionErrors.dfy(2052,7): Error: type declaration 'A2' is not allowed to change the requirement of being nonempty
ResolutionErrors.dfy(2053,7): Error: type declaration 'B0' is not allowed to change the requirement of supporting auto-initialization
ResolutionErrors.dfy(2055,7): Error: type declaration 'B2' is not allowed to change the requirement of supporting auto-initialization
ResolutionErrors.dfy(2056,7): Error: type declaration 'C0' is not allowed to change the requirement of being nonempty
ResolutionErrors.dfy(2057,7): Error: type declaration 'C1' is not allowed to change the requirement of supporting auto-initialization
ResolutionErrors.dfy(2061,4): Error: type parameter 'Q' is not allowed to change the requirement of supporting auto-initialization
ResolutionErrors.dfy(2064,4): Error: type parameter 'R' is not allowed to change the requirement of supporting auto-initialization
ResolutionErrors.dfy(2047,5): Error: type parameter (G) passed to method P must support auto-initialization (got Z.XYZ)
ResolutionErrors.dfy(2110,33): Error: type of yield-parameter must support auto-initialization (got 'T')
ResolutionErrors.dfy(2118,13): Error: a ghost function is allowed only in specification contexts
ResolutionErrors.dfy(2132,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2133,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2135,19): Error: type parameter 'G' (passed in as 'ORDINAL') to function call 'F' is not allowed to use ORDINAL
ResolutionErrors.dfy(2136,9): Error: type parameter 'G' (passed in as 'ORDINAL') to function call 'F'' is not allowed to use ORDINAL
ResolutionErrors.dfy(2137,9): Error: type parameter 'G' (passed in as '(char, ORDINAL)') to function call 'F'' is not allowed to use ORDINAL
ResolutionErrors.dfy(2138,18): Error: type parameter 'G' (passed in as 'ORDINAL') to the function 'F'' is not allowed to use ORDINAL
ResolutionErrors.dfy(2139,4): Error: type parameter 'G' (passed in as 'ORDINAL') to the method 'ParameterizedMethod' is not allowed to use ORDINAL
ResolutionErrors.dfy(2143,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2145,14): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2146,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2147,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2148,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2150,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2153,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2153,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2154,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2154,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2154,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2154,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2156,25): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2182,36): Error: Name of yield-parameter is used by another member of the iterator: u
ResolutionErrors.dfy(2183,37): Error: Name of implicit yield-history variable 'u' is already used by another member of the iterator
ResolutionErrors.dfy(2207,15): Error: To access members of class 'MyClass', write 'MyClass', not 'MyClass?'
ResolutionErrors.dfy(2218,15): Error: name of type (MyClass) is used as a variable
ResolutionErrors.dfy(2219,15): Error: name of type (MyClass?) is used as a variable
ResolutionErrors.dfy(2232,17): Error: To access members of class 'MyClass', write 'MyClass', not 'MyClass?'
ResolutionErrors.dfy(2243,17): Error: name of type (MyClass) is used as a variable
ResolutionErrors.dfy(2244,17): Error: name of type (MyClass?) is used as a variable
ResolutionErrors.dfy(2261,17): Error: static non-ghost const field 'W' of type 'MyClass' (which does not have a default compiled value) must give a defining value
ResolutionErrors.dfy(2263,17): Error: static non-ghost const field 'O' of type 'Odd' (which does not have a default compiled value) must give a defining value
ResolutionErrors.dfy(2269,17): Error: static non-ghost const field 'W' of type 'MyClass' (which does not have a default compiled value) must give a defining value
ResolutionErrors.dfy(2271,17): Error: static non-ghost const field 'O' of type 'Odd' (which does not have a default compiled value) must give a defining value
ResolutionErrors.dfy(2279,8): Error: class 'Instance' with fields without known initializers, like 'w' of type 'MyClass', must declare a constructor
ResolutionErrors.dfy(2285,8): Error: class 'GhostCl' with fields without known initializers, like 'z' of type 'MyClass', must declare a constructor
ResolutionErrors.dfy(2253,8): Error: static non-ghost const field 'X' of type 'Odd' (which does not have a default compiled value) must give a defining value
ResolutionErrors.dfy(2256,8): Error: static non-ghost const field 'Y' of type 'MyClass' (which does not have a default compiled value) must give a defining value
ResolutionErrors.dfy(2257,14): Error: static ghost const field 'Y'' of type 'MyClass' (which may be empty) must give a defining value
ResolutionErrors.dfy(2295,6): Error: LHS of assignment must denote a mutable field
ResolutionErrors.dfy(2296,10): Error: LHS of assignment must denote a mutable field
ResolutionErrors.dfy(2303,6): Error: LHS of assignment must denote a mutable field
ResolutionErrors.dfy(2310,8): Error: LHS of assignment must denote a mutable field of 'this'
ResolutionErrors.dfy(2324,20): Error: a ghost const field is allowed only in specification contexts
ResolutionErrors.dfy(2327,18): Error: a ghost const field is allowed only in specification contexts
ResolutionErrors.dfy(2343,9): Error: quantifiers in non-ghost contexts must be compilable, but Dafny's heuristics can't figure out how to produce or compile a bounded set of values for 'i'
ResolutionErrors.dfy(2346,9): Error: quantifiers in non-ghost contexts must be compilable, but Dafny's heuristics can't figure out how to produce or compile a bounded set of values for 'i'
ResolutionErrors.dfy(2352,24): Error: a set comprehension involved in a const field definition is not allowed to depend on the set of allocated references, but values of 'c' may contain references (see documentation for 'older' parameters)
ResolutionErrors.dfy(2352,24): Error: set comprehensions in non-ghost contexts must be compilable, but Dafny's heuristics can't figure out how to produce or compile a bounded set of values for 'c'
ResolutionErrors.dfy(2355,36): Error: a set comprehension involved in a newtype definition is not allowed to depend on the set of allocated references, but values of 'c' may contain references (see documentation for 'older' parameters)
ResolutionErrors.dfy(2356,34): Error: a set comprehension involved in a subset type definition is not allowed to depend on the set of allocated references, but values of 'c' may contain references (see documentation for 'older' parameters)
ResolutionErrors.dfy(2354,22): Error: a set comprehension involved in a const field definition is not allowed to depend on the set of allocated references, but values of 'c' may contain references (see documentation for 'older' parameters)
ResolutionErrors.dfy(2354,22): Error: set comprehensions in non-ghost contexts must be compilable, but Dafny's heuristics can't figure out how to produce or compile a bounded set of values for 'c'
ResolutionErrors.dfy(2361,19): Error: a set comprehension involved in a predicate definition is not allowed to depend on the set of allocated references, but values of 'c' may contain references (see documentation for 'older' parameters)
ResolutionErrors.dfy(2367,37): Error: a const field definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2367,10): Error: const field's type is not fully determined
ResolutionErrors.dfy(2370,49): Error: a newtype definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2371,47): Error: a subset type definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2369,35): Error: a const field definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2369,8): Error: const field's type is not fully determined
ResolutionErrors.dfy(2376,32): Error: a predicate definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2382,41): Error: a const field definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2382,10): Error: const field's type is not fully determined
ResolutionErrors.dfy(2385,53): Error: a newtype definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2386,51): Error: a subset type definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2384,39): Error: a const field definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2384,8): Error: const field's type is not fully determined
ResolutionErrors.dfy(2391,36): Error: a predicate definition is not allowed to depend on the set of allocated references
ResolutionErrors.dfy(2398,25): Error: the value returned by an abstemious function must come from invoking a co-constructor
ResolutionErrors.dfy(2434,25): Error: the value returned by an abstemious function must come from invoking a co-constructor
ResolutionErrors.dfy(2441,32): Error: an abstemious function is allowed to invoke a codatatype destructor only on its parameters
ResolutionErrors.dfy(2446,12): Error: an abstemious function is allowed to codatatype-match only on its parameters
ResolutionErrors.dfy(2453,9): Error: an abstemious function is not only allowed to check codatatype equality
ResolutionErrors.dfy(2455,14): Error: an abstemious function is not only allowed to check codatatype equality
ResolutionErrors.dfy(2480,19): Error: type parameter 'G' (passed in as 'ORDINAL') to function call 'F' is not allowed to use ORDINAL
ResolutionErrors.dfy(2481,13): Error: type parameter 'G' (passed in as 'ORDINAL') to function call 'F'' is not allowed to use ORDINAL
ResolutionErrors.dfy(2482,13): Error: type parameter 'G' (passed in as '(char, ORDINAL)') to function call 'F'' is not allowed to use ORDINAL
ResolutionErrors.dfy(2483,18): Error: type parameter 'G' (passed in as 'ORDINAL') to the function 'F'' is not allowed to use ORDINAL
ResolutionErrors.dfy(2488,17): Error: type of bound variable 'r' ('ORDINAL') is not allowed to use type ORDINAL
ResolutionErrors.dfy(2489,18): Error: type of bound variable 'r' ('ORDINAL') is not allowed to use type ORDINAL
ResolutionErrors.dfy(2490,24): Error: type of bound variable 'r' ('ORDINAL') is not allowed to use type ORDINAL
ResolutionErrors.dfy(2501,25): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2502,17): Error: type of bound variable 'yt' ('ORDINAL') is not allowed to use type ORDINAL
ResolutionErrors.dfy(2499,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2499,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2498,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2495,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2493,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2492,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2491,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2490,14): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2488,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2487,26): Error: type of bound variable 'r' ('ORDINAL') is not allowed to use type ORDINAL
ResolutionErrors.dfy(2486,18): Error: type of bound variable 'r' ('(ORDINAL, int)') is not allowed to use type ORDINAL
ResolutionErrors.dfy(2485,18): Error: type of bound variable 'r' ('ORDINAL') is not allowed to use type ORDINAL
ResolutionErrors.dfy(2484,4): Error: type parameter 'G' (passed in as 'ORDINAL') to the lemma 'ParameterizedLemma' is not allowed to use ORDINAL
ResolutionErrors.dfy(2478,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2477,8): Error: an ORDINAL type is not allowed to be used as a type argument
ResolutionErrors.dfy(2617,23): Error: no label 'Treasure' in scope at this time
ResolutionErrors.dfy(2618,19): Error: no label 'WonderfulLabel' in scope at this time
ResolutionErrors.dfy(2620,23): Error: no label 'FutureLabel' in scope at this time
ResolutionErrors.dfy(2629,13): Error: no label 'Treasure' in scope at this time
ResolutionErrors.dfy(2630,13): Error: no label 'WonderfulLabel' in scope at this time
ResolutionErrors.dfy(2632,13): Error: no label 'FutureLabel' in scope at this time
ResolutionErrors.dfy(2641,13): Error: no label 'Treasure' in scope at this time
ResolutionErrors.dfy(2642,13): Error: no label 'WonderfulLabel' in scope at this time
ResolutionErrors.dfy(2644,13): Error: no label 'FutureLabel' in scope at this time
ResolutionErrors.dfy(2534,11): Error: no label 'L' in scope at this time
ResolutionErrors.dfy(2537,10): Error: label shadows a dominating label
ResolutionErrors.dfy(2545,10): Error: label shadows a dominating label
ResolutionErrors.dfy(2673,26): Error: type parameter (G) passed to method GimmieOne must support auto-initialization (got Yt<GW>)
ResolutionErrors.dfy(2686,50): Error: type of the receiver is not fully determined at this program point
ResolutionErrors.dfy(2712,11): Error: name of type (Cache) is used as a variable
ResolutionErrors.dfy(2712,17): Error: incorrect type for selection into ? (got X)
ResolutionErrors.dfy(2720,13): Warning: the quantifier has the form 'exists x :: A ==> B', which most often is a typo for 'exists x :: A && B'; if you think otherwise, rewrite as 'exists x :: (A ==> B)' or 'exists x :: !A || B' to suppress this warning
ResolutionErrors.dfy(2730,13): Warning: the quantifier has the form 'exists x :: A ==> B', which most often is a typo for 'exists x :: A && B'; if you think otherwise, rewrite as 'exists x :: (A ==> B)' or 'exists x :: !A || B' to suppress this warning
ResolutionErrors.dfy(2763,13): Error: a call to a ghost function is allowed only in specification contexts (consider declaring the function with 'function method')
ResolutionErrors.dfy(2764,13): Error: a call to a ghost function is allowed only in specification contexts (consider declaring the function with 'function method')
ResolutionErrors.dfy(2766,11): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2787,4): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2797,15): Error: a call to a ghost function is allowed only in specification contexts (consider declaring the function with 'function method')
ResolutionErrors.dfy(2798,22): Error: a call to a ghost function is allowed only in specification contexts (consider declaring the function with 'function method')
ResolutionErrors.dfy(2804,15): Error: a call to a ghost function is allowed only in specification contexts (consider declaring the function with 'function method')
ResolutionErrors.dfy(2805,22): Error: a call to a ghost function is allowed only in specification contexts (consider declaring the function with 'function method')
ResolutionErrors.dfy(2822,23): Error: type of left argument to * (int) must agree with the result type (bool)
ResolutionErrors.dfy(2822,23): Error: type of * must be of a numeric type, bitvector type, or a set-like type (instead got bool)
ResolutionErrors.dfy(2821,13): Error: not resolving module 'V' because there were errors in resolving its nested module 'W'
ResolutionErrors.dfy(2831,21): Error: type of left argument to * (int) must agree with the result type (bool)
ResolutionErrors.dfy(2831,21): Error: type of * must be of a numeric type, bitvector type, or a set-like type (instead got bool)
ResolutionErrors.dfy(2830,11): Error: not resolving module 'V' because there were errors in resolving its nested module 'W'
ResolutionErrors.dfy(2817,9): Error: not resolving module 'ErrorsFromNestedModules' because there were errors in resolving its nested module 'U'
ResolutionErrors.dfy(2839,11): Error: duplicate name of top-level declaration: G
ResolutionErrors.dfy(2845,11): Error: duplicate name of top-level declaration: H
ResolutionErrors.dfy(2861,4): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2863,20): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2872,6): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2873,4): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2882,6): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2883,8): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2884,4): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2896,13): Error: expression is not allowed to refer to constant field x
ResolutionErrors.dfy(2898,22): Error: expression is not allowed to refer to constant field x
ResolutionErrors.dfy(2909,13): Error: arguments must be of a set or multiset type (got map<X, Y>)
ResolutionErrors.dfy(2919,4): Error: expect statement is not allowed in this context (because this is a ghost method or because the statement is guarded by a specification-only expression)
ResolutionErrors.dfy(2925,11): Error: quantifiers in non-ghost contexts must be compilable, but Dafny's heuristics can't figure out how to produce or compile a bounded set of values for 'i'
ResolutionErrors.dfy(2926,21): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(2937,15): Error: RHS (of type X) not assignable to LHS (of type X)
ResolutionErrors.dfy(2941,10): Error: type of corresponding source/RHS (X) does not match type of bound variable (X)
ResolutionErrors.dfy(2969,16): Error: sequence update requires the value to have the element type of the sequence (got Trait)
ResolutionErrors.dfy(2973,11): Error: multiset update requires domain element to be of type Elem (got Trait)
ResolutionErrors.dfy(2978,13): Error: map update requires domain element to be of type Elem (got Trait)
ResolutionErrors.dfy(2980,18): Error: map update requires the value to have the range type Elem (got Trait)
ResolutionErrors.dfy(3005,5): Error: type parameter (F) passed to method Q must support auto-initialization (got Y) (perhaps try declaring type parameter 'Y' on line 3000 as 'Y(0)', which says it can only be instantiated with a type that supports auto-initialization)
ResolutionErrors.dfy(3008,5): Error: type parameter (F) passed to method Q must support auto-initialization (got Z) (perhaps try declaring type parameter 'Z' on line 3000 as 'Z(0)', which says it can only be instantiated with a type that supports auto-initialization)
ResolutionErrors.dfy(3009,5): Error: type parameter (G) passed to method P must support nonempty (got Z) (perhaps try declaring type parameter 'Z' on line 3000 as 'Z(00)', which says it can only be instantiated with a nonempty type)
ResolutionErrors.dfy(3018,9): Error: type parameter (F) passed to function FQ must support auto-initialization (got Y) (perhaps try declaring type parameter 'Y' on line 3013 as 'Y(0)', which says it can only be instantiated with a type that supports auto-initialization)
ResolutionErrors.dfy(3021,9): Error: type parameter (F) passed to function FQ must support auto-initialization (got Z) (perhaps try declaring type parameter 'Z' on line 3013 as 'Z(0)', which says it can only be instantiated with a type that supports auto-initialization)
ResolutionErrors.dfy(3022,9): Error: type parameter (G) passed to function FP must support nonempty (got Z) (perhaps try declaring type parameter 'Z' on line 3013 as 'Z(00)', which says it can only be instantiated with a nonempty type)
ResolutionErrors.dfy(3039,9): Error: a call to a ghost function is allowed only in specification contexts (consider declaring the function with 'function method')
ResolutionErrors.dfy(3040,9): Error: a call to a ghost predicate is allowed only in specification contexts (consider declaring the predicate with 'predicate method')
ResolutionErrors.dfy(3041,9): Error: a call to a least predicate is allowed only in specification contexts
ResolutionErrors.dfy(3042,9): Error: a call to a greatest predicate is allowed only in specification contexts
ResolutionErrors.dfy(3043,9): Error: a call to a twostate function is allowed only in specification contexts
ResolutionErrors.dfy(3044,9): Error: a call to a twostate predicate is allowed only in specification contexts
ResolutionErrors.dfy(3061,9): Error: function 'F0' expects 0 type arguments (got 1)
ResolutionErrors.dfy(3063,9): Error: function 'F2' expects 2 type arguments (got 1)
ResolutionErrors.dfy(3064,9): Error: function 'F0' expects 0 type arguments (got 2)
ResolutionErrors.dfy(3065,9): Error: function 'F1' expects 1 type argument (got 2)
ResolutionErrors.dfy(3073,4): Error: method 'M0' expects 0 type arguments (got 1)
ResolutionErrors.dfy(3075,4): Error: method 'M2' expects 2 type arguments (got 1)
ResolutionErrors.dfy(3076,4): Error: method 'M0' expects 0 type arguments (got 2)
ResolutionErrors.dfy(3077,4): Error: method 'M1' expects 1 type argument (got 2)
ResolutionErrors.dfy(3090,10): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(3094,14): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(3099,10): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(3100,10): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(3251,11): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3252,11): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got PossiblyEmpty)
ResolutionErrors.dfy(3253,11): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got Nonempty)
ResolutionErrors.dfy(3254,11): Error: type parameter (T) passed to function MustSupportEquality must support equality (got NoEquality)
ResolutionErrors.dfy(3255,11): Error: type parameter (T) passed to function NoReferences must support no references (got Class?)
ResolutionErrors.dfy(3259,47): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3260,12): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3264,11): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3265,11): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got PossiblyEmpty)
ResolutionErrors.dfy(3266,11): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got Nonempty)
ResolutionErrors.dfy(3267,11): Error: type parameter (T) passed to function MustSupportEquality must support equality (got NoEquality)
ResolutionErrors.dfy(3268,11): Error: type parameter (T) passed to function NoReferences must support no references (got Class?)
ResolutionErrors.dfy(3272,50): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3273,12): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3276,12): Error: type parameter (T) passed to function MustSupportEquality must support equality (got NoEquality)
ResolutionErrors.dfy(3280,12): Error: type parameter (T) passed to function MustSupportEquality must support equality (got NoEquality)
ResolutionErrors.dfy(3285,53): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3288,63): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3124,9): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3129,9): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got Z) (perhaps try declaring type parameter 'Z' on line 3120 as 'Z(00)', which says it can only be instantiated with a nonempty type)
ResolutionErrors.dfy(3131,9): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got PossiblyEmpty)
ResolutionErrors.dfy(3132,9): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got Nonempty)
ResolutionErrors.dfy(3136,9): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got Z) (perhaps try declaring type parameter 'Z' on line 3120 as 'Z(0)', which says it can only be instantiated with a type that supports auto-initialization)
ResolutionErrors.dfy(3140,9): Error: type parameter (T) passed to function MustSupportEquality must support equality (got NoEquality)
ResolutionErrors.dfy(3143,9): Error: type parameter (T) passed to function MustSupportEquality must support equality (got Z) (perhaps try declaring type parameter 'Z' on line 3120 as 'Z(==)', which says it can only be instantiated with a type that supports equality)
ResolutionErrors.dfy(3148,9): Error: type parameter (T) passed to function NoReferences must support no references (got Class?)
ResolutionErrors.dfy(3150,9): Error: type parameter (T) passed to function NoReferences must support no references (got Z) (perhaps try declaring type parameter 'Z' on line 3120 as 'Z(!new)', which says it can only be instantiated with a type that contains no references)
ResolutionErrors.dfy(3157,9): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3163,9): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got PossiblyEmpty)
ResolutionErrors.dfy(3178,9): Error: type parameter (T) passed to function NoReferences must support no references (got Class?)
ResolutionErrors.dfy(3187,12): Error: == can only be applied to expressions of types that support equality (got T) (perhaps try declaring type parameter 'T' on line 3185 as 'T(==)', which says it can only be instantiated with a type that supports equality)
ResolutionErrors.dfy(3189,7): Error: == can only be applied to expressions of types that support equality (got T) (perhaps try declaring type parameter 'T' on line 3185 as 'T(==)', which says it can only be instantiated with a type that supports equality)
ResolutionErrors.dfy(3192,12): Error: type parameter (T) passed to function GetInt must support equality (got NoEquality)
ResolutionErrors.dfy(3194,7): Error: type parameter (T) passed to function GetInt must support equality (got NoEquality)
ResolutionErrors.dfy(3197,19): Error: type parameter (T) passed to function GetInt must support equality (got NoEquality)
ResolutionErrors.dfy(3205,13): Error: == can only be applied to expressions of types that support equality (got T) (perhaps try declaring type parameter 'T' on line 3204 as 'T(==)', which says it can only be instantiated with a type that supports equality)
ResolutionErrors.dfy(3210,13): Error: == can only be applied to expressions of types that support equality (got T) (perhaps try declaring type parameter 'T' on line 3204 as 'T(==)', which says it can only be instantiated with a type that supports equality)
ResolutionErrors.dfy(3212,23): Error: == can only be applied to expressions of types that support equality (got T) (perhaps try declaring type parameter 'T' on line 3204 as 'T(==)', which says it can only be instantiated with a type that supports equality)
ResolutionErrors.dfy(3214,14): Error: type parameter 0 (T) passed to type QuadEq must support equality (got seq<T>)
ResolutionErrors.dfy(3215,15): Error: type parameter 1 (U) passed to type QuadEq must support equality (got seq<T>)
ResolutionErrors.dfy(3224,15): Error: == can only be applied to expressions of types that support equality (got T) (perhaps try declaring type parameter 'T' on line 3221 as 'T(==)', which says it can only be instantiated with a type that supports equality)
ResolutionErrors.dfy(3233,15): Error: == can only be applied to expressions of types that support equality (got T) (perhaps try declaring type parameter 'T' on line 3221 as 'T(==)', which says it can only be instantiated with a type that supports equality)
ResolutionErrors.dfy(3305,6): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(3309,8): Error: non-ghost variable cannot be assigned a value that depends on a ghost
ResolutionErrors.dfy(3313,18): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(3339,6): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3345,6): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got PossiblyEmpty)
ResolutionErrors.dfy(3346,6): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got Nonempty)
ResolutionErrors.dfy(3353,6): Error: type parameter (T) passed to function MustSupportEquality must support equality (got NoEquality)
ResolutionErrors.dfy(3360,6): Error: type parameter (T) passed to function NoReferences must support no references (got Class?)
ResolutionErrors.dfy(3366,9): Error: type parameter (T) passed to function MustBeNonempty must support nonempty (got PossiblyEmpty)
ResolutionErrors.dfy(3372,9): Error: type parameter (T) passed to function MustBeAutoInit must support auto-initialization (got PossiblyEmpty)
ResolutionErrors.dfy(3387,9): Error: type parameter (T) passed to function NoReferences must support no references (got Class?)
ResolutionErrors.dfy(3435,7): Error: a ghost variable is allowed only in specification contexts
ResolutionErrors.dfy(3449,21): Error: a loop in a hint is not allowed to use 'modifies' clauses
ResolutionErrors.dfy(3456,21): Error: a loop in a hint is not allowed to use 'modifies' clauses
ResolutionErrors.dfy(3485,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got multiset<object>)
ResolutionErrors.dfy(3486,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got map<object, int>)
ResolutionErrors.dfy(3487,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got map<int, object>)
ResolutionErrors.dfy(3488,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got imap<object, object>)
ResolutionErrors.dfy(3493,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got int)
ResolutionErrors.dfy(3494,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got set<bool>)
ResolutionErrors.dfy(3495,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got iset<bv8>)
ResolutionErrors.dfy(3496,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got seq<int>)
ResolutionErrors.dfy(3501,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got int -> int)
ResolutionErrors.dfy(3502,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got int -> object)
ResolutionErrors.dfy(3503,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got int -> set<object>)
ResolutionErrors.dfy(3504,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got int -> seq<object>)
ResolutionErrors.dfy(3505,9): Error: the argument of a fresh expression must denote an object or a set or sequence of objects (instead got set<object> -> int)
ResolutionErrors.dfy(3524,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got map<object, int>)
ResolutionErrors.dfy(3525,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got map<int, object>)
ResolutionErrors.dfy(3526,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got imap<object, object>)
ResolutionErrors.dfy(3531,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got int)
ResolutionErrors.dfy(3532,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got set<bool>)
ResolutionErrors.dfy(3533,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got iset<bv8>)
ResolutionErrors.dfy(3534,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got seq<int>)
ResolutionErrors.dfy(3543,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> int)
ResolutionErrors.dfy(3544,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> object)
ResolutionErrors.dfy(3545,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> set<object>)
ResolutionErrors.dfy(3546,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> iset<object>)
ResolutionErrors.dfy(3547,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> seq<object>)
ResolutionErrors.dfy(3548,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got set<object> -> int)
ResolutionErrors.dfy(3549,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got bool -> multiset<object>)
ResolutionErrors.dfy(3550,19): Error: an unchanged expression must denote an object or a set/iset/multiset/seq of objects (instead got bool -> map<object, object>)
ResolutionErrors.dfy(3565,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got map<object, int>)
ResolutionErrors.dfy(3566,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got map<int, object>)
ResolutionErrors.dfy(3567,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got imap<object, object>)
ResolutionErrors.dfy(3572,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got int)
ResolutionErrors.dfy(3573,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got set<bool>)
ResolutionErrors.dfy(3574,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got iset<bv8>)
ResolutionErrors.dfy(3575,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got seq<int>)
ResolutionErrors.dfy(3583,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> int)
ResolutionErrors.dfy(3584,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> object)
ResolutionErrors.dfy(3585,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> set<object>)
ResolutionErrors.dfy(3586,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> iset<object>)
ResolutionErrors.dfy(3587,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got int -> seq<object>)
ResolutionErrors.dfy(3588,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got set<object> -> int)
ResolutionErrors.dfy(3589,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got bool -> multiset<object>)
ResolutionErrors.dfy(3590,13): Error: a modifies-clause expression must denote an object or a set/iset/multiset/seq of objects (instead got bool -> map<object, object>)
ResolutionErrors.dfy(3606,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got map<object, int>)
ResolutionErrors.dfy(3607,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got map<int, object>)
ResolutionErrors.dfy(3608,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got imap<object, object>)
ResolutionErrors.dfy(3614,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got int)
ResolutionErrors.dfy(3615,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got set<bool>)
ResolutionErrors.dfy(3616,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got iset<bv8>)
ResolutionErrors.dfy(3617,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got seq<int>)
ResolutionErrors.dfy(3626,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got int -> int)
ResolutionErrors.dfy(3627,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got int -> object)
ResolutionErrors.dfy(3631,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got set<object> -> int)
ResolutionErrors.dfy(3633,10): Error: a reads-clause expression must denote an object, a set/iset/multiset/seq of objects, or a function to a set/iset/multiset/seq of objects (instead got bool -> map<object, object>)
ResolutionErrors.dfy(3652,12): Error: a 'break break break continue' statement is allowed only in contexts with 4 enclosing loops, but the current context only has 3
ResolutionErrors.dfy(3689,27): Error: continue label must designate a loop: X
ResolutionErrors.dfy(3691,27): Error: continue label must designate a loop: Y0
ResolutionErrors.dfy(3693,27): Error: continue label must designate a loop: Y1
ResolutionErrors.dfy(3695,27): Error: continue label must designate a loop: Z
ResolutionErrors.dfy(3705,4): Error: a non-labeled 'break' statement is allowed only in loops
ResolutionErrors.dfy(3709,4): Error: a non-labeled 'continue' statement is allowed only in loops
ResolutionErrors.dfy(3715,19): Error: a non-labeled 'break' statement is allowed only in loops
ResolutionErrors.dfy(3716,19): Error: a non-labeled 'continue' statement is allowed only in loops
ResolutionErrors.dfy(3718,28): Error: continue label must designate a loop: X
ResolutionErrors.dfy(3735,21): Error: a non-labeled 'break' statement is allowed only in loops
ResolutionErrors.dfy(3736,21): Error: a non-labeled 'continue' statement is allowed only in loops
ResolutionErrors.dfy(3737,27): Error: break label is undefined or not in scope: L
ResolutionErrors.dfy(3738,30): Error: continue label is undefined or not in scope: L
ResolutionErrors.dfy(3751,8): Error: ghost-context continue statement is not allowed to continue out of non-ghost loop
ResolutionErrors.dfy(3760,8): Error: ghost-context break statement is not allowed to break out of non-ghost loop
ResolutionErrors.dfy(3768,8): Error: ghost-context continue statement is not allowed to continue out of non-ghost loop
ResolutionErrors.dfy(3783,10): Error: ghost-context continue statement is not allowed to continue out of non-ghost loop
ResolutionErrors.dfy(3806,10): Error: ghost-context continue statement is not allowed to continue out of non-ghost loop
600 resolution/type errors detected in ResolutionErrors.dfy
